const { Configuration, OpenAIApi } = require("openai");

const config = new Configuration({
  apiKey: process.env.OPENAI_API_KEY,
});

const openai = new OpenAIApi(config);

module.exports = async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  try {
    const { articles } = req.body;

    if (!Array.isArray(articles) || articles.length === 0) {
      return res.status(400).json({ error: "No articles provided" });
    }

    const content = articles
      .slice(0, 5)
      .map((a, i) => `${i + 1}. ${a.title} ‚Äì ${a.description || 'No summary'}`)
      .join("\n");

    const prompt = `
You are Mirror Intel, the world's smartest news digest assistant.

Summarize the following headlines into a sharp, short and insightful briefing for today's readers:

${content}

Use 3-5 sentences. No fluff. Start the summary with "üß† GPT Digest:".
    `.trim();

    const completion = await openai.createChatCompletion({
      model: "gpt-3.5-turbo",
      messages: [{ role: "user", content: prompt }],
    });

    const summary = completion.data.choices[0].message.content.trim();
    return res.status(200).json({ summary });

  } catch (error) {
    console.error("‚ùå GPT API Error:", error);
    return res.status(500).json({
      error: error?.response?.data || error.message || "GPT summarization failed.",
    });
  }
};
